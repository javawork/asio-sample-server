// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sum.proto

#include "sum.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace pbsum {
PROTOBUF_CONSTEXPR Add::Add(
    ::_pbi::ConstantInitialized)
  : num_(0){}
struct AddDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddDefaultTypeInternal() {}
  union {
    Add _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddDefaultTypeInternal _Add_default_instance_;
PROTOBUF_CONSTEXPR LocalSum::LocalSum(
    ::_pbi::ConstantInitialized)
  : sum_(0){}
struct LocalSumDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocalSumDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocalSumDefaultTypeInternal() {}
  union {
    LocalSum _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocalSumDefaultTypeInternal _LocalSum_default_instance_;
}  // namespace pbsum
static ::_pb::Metadata file_level_metadata_sum_2eproto[2];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_sum_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_sum_2eproto = nullptr;

const uint32_t TableStruct_sum_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbsum::Add, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbsum::Add, num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbsum::LocalSum, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbsum::LocalSum, sum_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::pbsum::Add)},
  { 7, -1, -1, sizeof(::pbsum::LocalSum)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::pbsum::_Add_default_instance_._instance,
  &::pbsum::_LocalSum_default_instance_._instance,
};

const char descriptor_table_protodef_sum_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\tsum.proto\022\005pbsum\"\022\n\003Add\022\013\n\003num\030\001 \001(\005\"\027"
  "\n\010LocalSum\022\013\n\003sum\030\001 \001(\005*/\n\013MessageCode\022\010"
  "\n\004NONE\020\000\022\007\n\003ADD\020\001\022\r\n\tLOCAL_SUM\020\002b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_sum_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_sum_2eproto = {
    false, false, 120, descriptor_table_protodef_sum_2eproto,
    "sum.proto",
    &descriptor_table_sum_2eproto_once, nullptr, 0, 2,
    schemas, file_default_instances, TableStruct_sum_2eproto::offsets,
    file_level_metadata_sum_2eproto, file_level_enum_descriptors_sum_2eproto,
    file_level_service_descriptors_sum_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_sum_2eproto_getter() {
  return &descriptor_table_sum_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_sum_2eproto(&descriptor_table_sum_2eproto);
namespace pbsum {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessageCode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_sum_2eproto);
  return file_level_enum_descriptors_sum_2eproto[0];
}
bool MessageCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Add::_Internal {
 public:
};

Add::Add(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:pbsum.Add)
}
Add::Add(const Add& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  num_ = from.num_;
  // @@protoc_insertion_point(copy_constructor:pbsum.Add)
}

inline void Add::SharedCtor() {
num_ = 0;
}

Add::~Add() {
  // @@protoc_insertion_point(destructor:pbsum.Add)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Add::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Add::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Add::Clear() {
// @@protoc_insertion_point(message_clear_start:pbsum.Add)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  num_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Add::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 num = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Add::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbsum.Add)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 num = 1;
  if (this->_internal_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbsum.Add)
  return target;
}

size_t Add::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbsum.Add)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 num = 1;
  if (this->_internal_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Add::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Add::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Add::GetClassData() const { return &_class_data_; }

void Add::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Add *>(to)->MergeFrom(
      static_cast<const Add &>(from));
}


void Add::MergeFrom(const Add& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbsum.Add)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_num() != 0) {
    _internal_set_num(from._internal_num());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Add::CopyFrom(const Add& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbsum.Add)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Add::IsInitialized() const {
  return true;
}

void Add::InternalSwap(Add* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(num_, other->num_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Add::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sum_2eproto_getter, &descriptor_table_sum_2eproto_once,
      file_level_metadata_sum_2eproto[0]);
}

// ===================================================================

class LocalSum::_Internal {
 public:
};

LocalSum::LocalSum(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:pbsum.LocalSum)
}
LocalSum::LocalSum(const LocalSum& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sum_ = from.sum_;
  // @@protoc_insertion_point(copy_constructor:pbsum.LocalSum)
}

inline void LocalSum::SharedCtor() {
sum_ = 0;
}

LocalSum::~LocalSum() {
  // @@protoc_insertion_point(destructor:pbsum.LocalSum)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LocalSum::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void LocalSum::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LocalSum::Clear() {
// @@protoc_insertion_point(message_clear_start:pbsum.LocalSum)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sum_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocalSum::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 sum = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          sum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LocalSum::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbsum.LocalSum)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sum = 1;
  if (this->_internal_sum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_sum(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbsum.LocalSum)
  return target;
}

size_t LocalSum::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbsum.LocalSum)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 sum = 1;
  if (this->_internal_sum() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_sum());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LocalSum::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LocalSum::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LocalSum::GetClassData() const { return &_class_data_; }

void LocalSum::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<LocalSum *>(to)->MergeFrom(
      static_cast<const LocalSum &>(from));
}


void LocalSum::MergeFrom(const LocalSum& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbsum.LocalSum)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_sum() != 0) {
    _internal_set_sum(from._internal_sum());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LocalSum::CopyFrom(const LocalSum& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbsum.LocalSum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalSum::IsInitialized() const {
  return true;
}

void LocalSum::InternalSwap(LocalSum* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(sum_, other->sum_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LocalSum::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sum_2eproto_getter, &descriptor_table_sum_2eproto_once,
      file_level_metadata_sum_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace pbsum
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pbsum::Add*
Arena::CreateMaybeMessage< ::pbsum::Add >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbsum::Add >(arena);
}
template<> PROTOBUF_NOINLINE ::pbsum::LocalSum*
Arena::CreateMaybeMessage< ::pbsum::LocalSum >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbsum::LocalSum >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
